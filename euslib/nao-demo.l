#!/usr/bin/env roseus

(load "package://naoeus/nao-interface.l")
(load "nao-motions.l")

(ros::load-ros-manifest "roseus")
(ros::roseus "nao-eat")
(ros::advertise "choco_status" std_msgs::String 1)

(defun da ()
  (when (boundp '*irtviewer*)
    (send *irtviewer* :draw-objects)))

(defun speak-jp (str &rest args)
  (let ((msg (instance std_msgs::String :init)))
    (send msg :data (apply #'format nil str args))
    (ros::ros-info "speech ~A" (send msg :data))
    (ros::publish "/speech" msg)))

(defun publish-choco-status(status)
  (setq msg (instance std_msgs::String :init))
  (send msg :data status)
  (ros::publish "choco_status" msg))


(defun eat-right ()
  (progn
    (unix:usleep (* 1000 2000))
    (reach1-0 6000)
    (speak-jp "\\vct=100\\\\rspd=80\\ストロベリーチョコを食べるね")
    (unix:usleep (* 1000 6000))
    (reach1-2 6000)
    (unix:usleep (* 1000 6000))
    (reach1-5 6000)
    (unix:usleep (* 1000 3000))
    (speak-jp "\\vct=100\\\\rspd=80\\いただき\\vct=110\\まーす？")
    (unix:usleep (* 1000 4000))
    (publish-choco-status "attachR")
    (unix::usleep (* 1000 300))
    (reach1-2 6000)
    (unix:usleep (* 1000 6000))
    (eat1-2 4000)
    (unix:usleep (* 1000 4000))
    (eat1-3 2000)
    (unix::usleep (* 1000 2000))
    (publish-choco-status "deleteR")
    (unix::usleep (* 1000 300))
    (move-neck)
    (reach1-0 4000)
    (speak-jp "\\vct=100\\\\rspd=80\\ごちそうさまでした")
    (unix:usleep (* 1000 4000))
    (reset-sit-pose 4000)))

(defun eat-left ()
  (progn
    (unix:usleep (* 1000 2000))
    (reach1-0 6000)
    (speak-jp "\\vct=100\\\\rspd=80\\ミルクチョコを食べるね")
    (unix:usleep (* 1000 6000))
    (reach1-2 6000)
    (unix:usleep (* 1000 6000))
    (reach1-7 6000)
    (unix:usleep (* 1000 3000))
    (speak-jp "\\vct=100\\\\rspd=80\\いただき\\vct=110\\まーす？")
    (unix:usleep (* 1000 4000))
    (publish-choco-status "attachL")
    (unix::usleep (* 1000 300))
    (reach1-2 6000)
    (unix:usleep (* 1000 6000))
    (eat1-2 4000)
    (unix:usleep (* 1000 4000))
    (eat1-3 2000)
    (unix::usleep (* 1000 2000))
    (publish-choco-status "deleteL")
    (unix::usleep (* 1000 300))
    (move-neck)
    (reach1-0 4000)
    (speak-jp "\\vct=100\\\\rspd=80\\ごちそうさまでした")
    (unix:usleep (* 1000 4000))
    (reset-sit-pose 4000)))


(defun eat-cb(msg)
  (cond ((equal (send msg :data) "eat_right")
         (eat-right))
        ((equal (send msg :data) "eat_left")
         (eat-left))))

(defun main()
  	 (ros::subscribe "/start_eat"
	  		         std_msgs::String
	  		         #'eat-cb)
     (ros::rate 100)
     (while (ros::ok)
       (ros::spin-once)))
